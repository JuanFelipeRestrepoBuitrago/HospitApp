name: Functional Testing

on:
  push:
    branches: ["main", "juan_felipe/dev"]
  pull_request:
    branches: ["main", "juan_felipe/dev"]

jobs:
  install-and-tests:
    name: Run Functional Tests
    runs-on: ubuntu-latest
    environment: Preview
    permissions:
      contents: read
      security-events: write
      issues: write

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      CACHE_TTL: ${{ secrets.CACHE_TTL }}
      JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
      NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}
      NEXT_PUBLIC_APP_NAME: ${{ secrets.NEXT_PUBLIC_APP_NAME }}
      NEXT_PUBLIC_MAPBOX_API_KEY: ${{ secrets.NEXT_PUBLIC_MAPBOX_API_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22.14.0

      - name: Install dependencies
        working-directory: hospitapp
        run: npm install

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1.7.3
        with:
          chrome-version: 135.0.7049.84
          install-chromedriver: true

      - name: Verify Chrome and ChromeDriver versions
        run: |
          google-chrome --version
          chromedriver --version

      - name: Run Cucumber Tests
        working-directory: hospitapp
        run: npm run test:local > test-output.log 2>&1

      - name: Upload test artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-artifacts
          path: |
            hospitapp/**/*.png
            hospitapp/**/*.log
            hospitapp/cucumber-report.html

      - name: Create GitHub Issue on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const { Octokit } = require('@octokit/rest');
            
            // Read cucumber-report.html
            const reportPath = 'hospitapp/cucumber-report.html';
            let reportContent = '';
            try {
              reportContent = fs.readFileSync(reportPath, 'utf8');
            } catch (error) {
              console.error('Failed to read cucumber-report.html:', error);
              return;
            }

            const outputPath = 'hospitapp/test-output.log';
            let testOutput = 'No test output captured';
            try {
                testOutput = fs.readFileSync(outputPath, 'utf8');
            } catch (error) {
                console.error('Failed to read test-output.log:', error);
            }

            const date = new Date().toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            });
            
            // Create issue
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Bug: Functional Test Failure - Run #${context.runId}`,
              body: `
              ## Bug: Functional Test Failure - Run #${context.runId}
              
              ### Reporter:
              GitHub CI

              
              ### Category:
              Functional testing

              ### User Story:
              **FR00 Unknown**

              ### Severity:
              High        

              ### Priority
              High

              ---

              ### Summary:
              One or many functional tests failed. 
              
              The test report (cucumber-report.html) is attached as an artifact in the workflow run:
              [View Artifacts](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})

              ### Description
              The CI of GitHub ran the workflow for functional testing and it failed, please review details in the artifacts of the action: [Artifacts](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}).

              ### Steps to Reproduce
              1. Download the report at [Artifacts](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}).
              2. Open the cucumber-report.html file.
              3. Replicate the steps taken in the file output. 

              ### Evidence
              The test report (cucumber-report.html) is attached as an artifact in the workflow run:
              [View Artifacts](${context.serverUrl}/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId})

              ### Expected Behavior
              To Define by Juan Felipe Restrepo

              ### Suggested Fix
              To Define by Juan Felipe Restrepo

              #### Additional Notes:
              To Define by Juan Felipe Restrepo

              ### Test Output
              \`\`\`
              ${testOutput}
              \`\`\`
              `,
              labels: ['bug', 'test-failure'],
              assignees: ['JuanFelipeRestrepoBuitrago'] // Replace with your GitHub username or team
            });
            
            console.log(`Created issue #${issue.data.number}`);

            const projectNodeId = 'PVT_kwHOBjWbP84AxRWg';
            if ('${{ secrets.PAT_TOKEN }}') {
              const patOctokit = new Octokit({
                auth: '${{ secrets.PAT_TOKEN }}'
              });
              try {
                await patOctokit.graphql(`
                  mutation($projectId: ID!, $contentId: ID!) {
                    addProjectV2ItemById(input: { projectId: $projectId, contentId: $contentId }) {
                      item {
                        id
                      }
                    }
                  }
                `, {
                  projectId: projectNodeId,
                  contentId: issue.data.node_id
                });
                console.log(`Added issue #${issue.data.number} to HospitApp Backlog project`);
              } catch (error) {
                console.error('Failed to add issue to project (continuing without failure):', error);
              }
            } else {
              console.log('PAT_TOKEN not available, skipping project assignment');
            }
